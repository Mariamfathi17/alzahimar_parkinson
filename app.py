import streamlit as st
import numpy as np
import cv2
from PIL import Image
import tensorflow as tf

# ------------------------------
# ØªØ­Ù…ÙŠÙ„ Ø§Ù„Ù…ÙˆØ¯ÙŠÙ„ (Keras)
# ------------------------------
model = tf.keras.models.load_model("mlp_model_final.keras")

# ------------------------------
# Ø¯Ø§Ù„Ø© Ø§Ù„Ù€ preprocessing
# ------------------------------
def preprocess_image(image):
    img = np.array(image)

    # ØªØ­ÙˆÙŠÙ„ Ù„Ù„ØµÙˆØ±Ø© Ø§Ù„Ù…Ù„ÙˆÙ†Ø© â†’ BGR â†’ Gray (Ù„Ùˆ Ø§Ù„Ù…ÙˆØ¯ÙŠÙ„ Ø¹Ø§ÙŠØ² Gray)
    img = cv2.cvtColor(img, cv2.COLOR_RGB2BGR)
    img = cv2.resize(img, (224, 224))  # Resize to 224x224

    # Normalization
    img = img / 255.0

    # Ù„Ùˆ Ø§Ù„Ù…ÙˆØ¯ÙŠÙ„ MLP Ù…Ø­ØªØ§Ø¬ Flatten: Ù„Ø§Ø²Ù… Ù†Ø¹Ù…Ù„ reshape
    img = img.reshape(1, -1)  

    return img

# ------------------------------
# ÙˆØ§Ø¬Ù‡Ø© Streamlit
# ------------------------------
st.title("ðŸ§  Alzheimer & Parkinson MRI Classifier (Keras Model)")
st.write("Upload an MRI image to predict the disease")

uploaded_file = st.file_uploader("Upload MRI Image", type=["jpg", "png", "jpeg"])

if uploaded_file is not None:
    image = Image.open(uploaded_file).convert("RGB")
    st.image(image, caption="Uploaded Image", use_container_width=True)

    # Ù…Ø¹Ø§Ù„Ø¬Ø© Ø§Ù„ØµÙˆØ±Ø©
    processed_img = preprocess_image(image)

    # ØªÙˆÙ‚Ø¹ Ø§Ù„Ù†ØªÙŠØ¬Ø©
    prediction = model.predict(processed_img)
    predicted_class = np.argmax(prediction, axis=1)[0]

    # Ø§Ù„Ù…Ø§Ø¨ Ø¨ØªØ§Ø¹ Ø§Ù„ÙƒÙ„Ø§Ø³Ø§Øª
    label_map = {0: "Alzheimer", 1: "Normal", 2: "Parkinson"}

    # Ø¹Ø±Ø¶ Ø§Ù„Ù†ØªÙŠØ¬Ø©
    st.subheader("Prediction Result:
